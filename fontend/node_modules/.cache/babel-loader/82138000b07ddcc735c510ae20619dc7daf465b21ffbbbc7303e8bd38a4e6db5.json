{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umarm\\\\OneDrive\\\\Desktop\\\\fiverr-clone\\\\fontend\\\\src\\\\components\\\\ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Messaging from \"./Messaging\";\nimport { io } from \"socket.io-client\";\n// import './chatapp.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction ChatApp() {\n  _s();\n  const [users, setUsers] = useState([]); // To store the list of users\n  const [selectedUser, setSelectedUser] = useState(null); // To store the selected user\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [userId, setUserId] = useState(\"\");\n\n  // Fetch logged-in user's ID and list of all users\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"userId\");\n    if (loggedInUser) {\n      setUserId(loggedInUser);\n\n      // Fetch all users\n      axios.get(\"http://localhost:5000/api/users\").then(res => setUsers(res.data));\n      console.log(res.data).catch(err => console.error(\"Error fetching users:\", err));\n\n      // Fetch conversations for the logged-in user\n      axios.get(`http://localhost:5000/api/conversations/${loggedInUser}`).then(res => setConversations(res.data)).catch(err => console.error(\"Error fetching conversations:\", err));\n    }\n  }, []);\n\n  // Handle user selection to start a conversation\n  const handleUserSelect = receiverId => {\n    var _users$find;\n    console.log(`Making GET request to: http://localhost:5000/api/conversations/${userId}/${receiverId}`);\n    const userName = ((_users$find = users.find(user => user._id === receiverId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || \"Unknown User\";\n    setSelectedUser(userName); // Set the selected user's name\n\n    axios.get(`http://localhost:5000/api/conversations/${userId}/${receiverId}`).then(res => {\n      if (res.data) {\n        setSelectedConversation(res.data);\n        socket.emit(\"joinConversation\", res.data._id);\n      }\n    }).catch(err => {\n      console.error(\"Error checking conversation:\", err.response ? err.response.data : err.message);\n\n      // Create new conversation if not found\n      axios.post('http://localhost:5000/api/conversations', {\n        participants: [userId, receiverId],\n        messages: []\n      }).then(newConversation => {\n        console.log(\"New conversation created:\", newConversation.data);\n        setSelectedConversation(newConversation.data);\n        socket.emit(\"joinConversation\", newConversation.data._id);\n      }).catch(err => {\n        console.error(\"Error creating new conversation:\", err);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        borderRight: \"1px solid #ddd\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.filter(user => user._id !== userId) // Exclude the logged-in user\n        .map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleUserSelect(user._id) // Start a conversation with selected user\n          ,\n          style: {\n            cursor: \"pointer\",\n            padding: \"5px\"\n          },\n          children: user.name\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 3,\n        padding: \"10px\",\n        height: \"90vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          fontWeight: \"bold\",\n          fontSize: \"20px\",\n          borderBottom: \"1px solid\",\n          height: \"70px\"\n        },\n        children: \"userName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), selectedConversation ? /*#__PURE__*/_jsxDEV(Messaging, {\n        conversationId: selectedConversation._id,\n        receiverId: selectedConversation.participants.find(id => id !== userId),\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a user to start a conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"3CU0f5NQulHx/1eRgulbE3gbKro=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Messaging","io","jsxDEV","_jsxDEV","socket","ChatApp","_s","users","setUsers","selectedUser","setSelectedUser","conversations","setConversations","selectedConversation","setSelectedConversation","userId","setUserId","loggedInUser","localStorage","getItem","get","then","res","data","console","log","catch","err","error","handleUserSelect","receiverId","_users$find","userName","find","user","_id","name","emit","response","message","post","participants","messages","newConversation","style","display","children","flex","borderRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","filter","map","onClick","cursor","height","alignItems","justifyContent","fontWeight","fontSize","borderBottom","conversationId","id","_c","$RefreshReg$"],"sources":["C:/Users/umarm/OneDrive/Desktop/fiverr-clone/fontend/src/components/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Messaging from \"./Messaging\";\r\nimport { io } from \"socket.io-client\";\r\n// import './chatapp.css'\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction ChatApp() {\r\n  const [users, setUsers] = useState([]); // To store the list of users\r\n  const [selectedUser, setSelectedUser] = useState(null); // To store the selected user\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  // Fetch logged-in user's ID and list of all users\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"userId\");\r\n    if (loggedInUser) {\r\n      setUserId(loggedInUser);\r\n\r\n      // Fetch all users\r\n      axios\r\n        .get(\"http://localhost:5000/api/users\")\r\n        .then((res) => setUsers(res.data))\r\n        console.log(res.data)\r\n        .catch((err) => console.error(\"Error fetching users:\", err));\r\n\r\n      // Fetch conversations for the logged-in user\r\n      axios\r\n        .get(`http://localhost:5000/api/conversations/${loggedInUser}`)\r\n        .then((res) => setConversations(res.data))\r\n        .catch((err) => console.error(\"Error fetching conversations:\", err));\r\n    }\r\n  }, []);\r\n\r\n  // Handle user selection to start a conversation\r\n  const handleUserSelect = (receiverId) => {\r\n    console.log(`Making GET request to: http://localhost:5000/api/conversations/${userId}/${receiverId}`);\r\n    const userName = users.find((user) => user._id === receiverId)?.name || \"Unknown User\";\r\n    setSelectedUser(userName); // Set the selected user's name\r\n  \r\n    axios\r\n      .get(`http://localhost:5000/api/conversations/${userId}/${receiverId}`)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setSelectedConversation(res.data);\r\n          socket.emit(\"joinConversation\", res.data._id);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error checking conversation:\", err.response ? err.response.data : err.message);\r\n        \r\n        // Create new conversation if not found\r\n        axios.post('http://localhost:5000/api/conversations', {\r\n          participants: [userId, receiverId],\r\n          messages: []\r\n        })\r\n        .then((newConversation) => {\r\n          console.log(\"New conversation created:\", newConversation.data);\r\n          setSelectedConversation(newConversation.data);\r\n          socket.emit(\"joinConversation\", newConversation.data._id);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error creating new conversation:\", err);\r\n        });\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {/* User List */}\r\n      <div style={{ flex: 1, borderRight: \"1px solid #ddd\", padding: \"10px\" }}>\r\n        <h3>Users</h3>\r\n        <ul>\r\n          {users\r\n            .filter((user) => user._id !== userId) // Exclude the logged-in user\r\n            .map((user) => (\r\n              <li\r\n                key={user._id}\r\n                onClick={() => handleUserSelect(user._id)} // Start a conversation with selected user\r\n                style={{ cursor: \"pointer\", padding: \"5px\" }}\r\n              >\r\n                {user.name}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Messaging Area */}\r\n      <div style={{ flex: 3, padding: \"10px\", height: \"90vh\" }}>\r\n        <div style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"20px\",\r\n          borderBottom: \"1px solid\",\r\n          height: \"70px\"\r\n        }}\r\n        >userName</div>\r\n        {selectedConversation ? (\r\n          <Messaging\r\n            conversationId={selectedConversation._id}\r\n            receiverId={selectedConversation.participants.find(\r\n              (id) => id !== userId\r\n            )}\r\n            socket={socket}\r\n          />\r\n        ) : (\r\n          <p>Select a user to start a conversation</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}