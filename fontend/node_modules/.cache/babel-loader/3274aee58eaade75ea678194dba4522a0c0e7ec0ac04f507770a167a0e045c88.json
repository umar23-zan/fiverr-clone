{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umarm\\\\OneDrive\\\\Desktop\\\\fiverr-clone\\\\fontend\\\\src\\\\components\\\\Messaging.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n// import './chatapp.css'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messaging({\n  socket,\n  conversationId,\n  receiverId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    // Fetch existing messages for the conversation\n    axios.get(`http://localhost:5000/api/messages/${conversationId}`).then(res => {\n      setMessages(res.data); // Load previous messages\n    }).catch(err => console.error(\"Error fetching messages:\", err));\n\n    // Listen for new messages\n    socket.on(\"receiveMessage\", message => {\n      if (message.conversationId === conversationId) {\n        setMessages(prevMessages => [...prevMessages, message]);\n      }\n    });\n    return () => {\n      socket.off(\"receiveMessage\");\n    };\n  }, [conversationId, socket]);\n  const sendMessage = () => {\n    if (!newMessage.trim() && !file) return;\n    const message = {\n      conversationId,\n      senderId: userId,\n      receiverId,\n      content: newMessage,\n      fileUrl: null,\n      originalFileName: null,\n      fileSize: null,\n      timestamp: new Date()\n    };\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"conversationId\", conversationId);\n      formData.append(\"senderId\", userId);\n      formData.append(\"receiverId\", receiverId);\n      axios.post(\"http://localhost:5000/api/messages/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        message.fileUrl = res.data.fileUrl;\n        message.originalFileName = res.data.originalName;\n        message.fileSize = res.data.size;\n        sendSocketMessage(message);\n      }).catch(err => console.error(\"Error uploading file:\", err));\n    } else {\n      sendSocketMessage(message);\n    }\n  };\n  const sendSocketMessage = message => {\n    // Emit the message through Socket.IO\n    socket.emit(\"sendMessage\", message);\n\n    // Save the message to the database\n    axios.post(\"http://localhost:5000/api/messages\", message).then(() => {\n      setMessages(prevMessages => [...prevMessages, message]);\n      setNewMessage(\"\"); // Clear input field\n      setFile(null); // Clear file input\n    }).catch(err => console.error(\"Error sending message:\", err));\n  };\n\n  // Function to render file preview or download link\n  const renderFilePreview = message => {\n    if (!message.fileUrl) return null;\n\n    // Add null check for originalFileName\n    const fileExtension = message.originalFileName ? message.originalFileName.split('.').pop().toLowerCase() : '';\n    const fileUrl = `http://localhost:5000${message.fileUrl}`;\n\n    // Image preview for common image types\n    const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'];\n    if (imageExtensions.includes(fileExtension)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: fileUrl,\n          alt: message.originalFileName || 'File',\n          style: {\n            maxWidth: '200px',\n            maxHeight: '200px',\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: fileUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            display: 'block',\n            fontSize: '0.8em'\n          },\n          children: [\"Download \", message.originalFileName || 'File', \" (\", formatFileSize(message.fileSize), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    }\n\n    // PDF preview\n    if (fileExtension === 'pdf') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"embed\", {\n          src: fileUrl,\n          type: \"application/pdf\",\n          width: \"200\",\n          height: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: fileUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            display: 'block',\n            fontSize: '0.8em'\n          },\n          children: [\"Download PDF \", message.originalFileName || 'File', \" (\", formatFileSize(message.fileSize), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Generic file download for other types\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: fileUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        display: 'block',\n        color: 'blue',\n        marginTop: '5px'\n      },\n      children: [\"Download \", message.originalFileName || 'File', \" (\", formatFileSize(message.fileSize), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Helper function to format file size\n  const formatFileSize = bytes => {\n    if (!bytes) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"90vh\",\n        overflowY: \"scroll\"\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: msg.senderId === userId ? \"flex-end\" : \"flex-start\",\n          margin: \"10px 0\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: msg.senderId === userId ? \"#DCF8C6\" : \"#FFFFFF\",\n            padding: \"10px\",\n            borderRadius: \"10px\",\n            maxWidth: \"60%\"\n          },\n          children: [msg.content && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 31\n          }, this), renderFilePreview(msg)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-around\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\",\n        style: {\n          width: \"300px\",\n          height: \"30px\",\n          borderStyle: \"solid\",\n          borderRadius: \"25px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(Messaging, \"I5MhRKMpwGbHWIbRkKV12Tn6fT0=\");\n_c = Messaging;\nexport default Messaging;\nvar _c;\n$RefreshReg$(_c, \"Messaging\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Messaging","socket","conversationId","receiverId","_s","messages","setMessages","newMessage","setNewMessage","file","setFile","userId","localStorage","getItem","get","then","res","data","catch","err","console","error","on","message","prevMessages","off","sendMessage","trim","senderId","content","fileUrl","originalFileName","fileSize","timestamp","Date","formData","FormData","append","post","headers","originalName","size","sendSocketMessage","emit","renderFilePreview","fileExtension","split","pop","toLowerCase","imageExtensions","includes","children","src","alt","style","maxWidth","maxHeight","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","display","fontSize","formatFileSize","type","width","height","color","marginTop","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","overflowY","map","msg","idx","justifyContent","margin","backgroundColor","padding","borderRadius","flexDirection","alignItems","value","onChange","e","placeholder","borderStyle","files","marginLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/umarm/OneDrive/Desktop/fiverr-clone/fontend/src/components/Messaging.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import './chatapp.css'\r\n\r\nfunction Messaging({ socket, conversationId, receiverId }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const userId = localStorage.getItem('userId');\r\n\r\n\r\n  useEffect(() => {\r\n    // Fetch existing messages for the conversation\r\n    axios\r\n      .get(`http://localhost:5000/api/messages/${conversationId}`)\r\n      .then((res) => {\r\n        setMessages(res.data); // Load previous messages\r\n      })\r\n      .catch((err) => console.error(\"Error fetching messages:\", err));\r\n\r\n    // Listen for new messages\r\n    socket.on(\"receiveMessage\", (message) => {\r\n      if (message.conversationId === conversationId) {\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receiveMessage\");\r\n    };\r\n  }, [conversationId, socket]);\r\n\r\n  const sendMessage = () => {\r\n    if (!newMessage.trim() && !file) return;\r\n\r\n    const message = {\r\n      conversationId,\r\n      senderId: userId,\r\n      receiverId,\r\n      content: newMessage,\r\n      fileUrl: null,\r\n      originalFileName: null,\r\n      fileSize: null,\r\n      timestamp: new Date(),\r\n    };\r\n    \r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"conversationId\", conversationId);\r\n      formData.append(\"senderId\", userId);\r\n      formData.append(\"receiverId\", receiverId);\r\n\r\n      axios\r\n        .post(\"http://localhost:5000/api/messages/upload\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        })\r\n        .then((res) => {\r\n          message.fileUrl = res.data.fileUrl;\r\n          message.originalFileName = res.data.originalName;\r\n          message.fileSize = res.data.size;\r\n          sendSocketMessage(message);\r\n        })\r\n        .catch((err) => console.error(\"Error uploading file:\", err));\r\n    } else {\r\n      sendSocketMessage(message);\r\n    }\r\n  };\r\n\r\n  const sendSocketMessage = (message) => {\r\n    // Emit the message through Socket.IO\r\n    socket.emit(\"sendMessage\", message);\r\n\r\n    // Save the message to the database\r\n    axios\r\n      .post(\"http://localhost:5000/api/messages\", message)\r\n      .then(() => {\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n        setNewMessage(\"\"); // Clear input field\r\n        setFile(null); // Clear file input\r\n      })\r\n      .catch((err) => console.error(\"Error sending message:\", err));\r\n  };\r\n\r\n  // Function to render file preview or download link\r\n  const renderFilePreview = (message) => {\r\n    if (!message.fileUrl) return null;\r\n  \r\n    // Add null check for originalFileName\r\n    const fileExtension = message.originalFileName\r\n      ? message.originalFileName.split('.').pop().toLowerCase()\r\n      : '';\r\n    \r\n    const fileUrl = `http://localhost:5000${message.fileUrl}`;\r\n  \r\n    // Image preview for common image types\r\n    const imageExtensions = ['jpg', 'jpeg', 'png', 'gif', 'bmp', 'webp'];\r\n    if (imageExtensions.includes(fileExtension)) {\r\n      return (\r\n        <div>\r\n          <img \r\n            src={fileUrl} \r\n            alt={message.originalFileName || 'File'}\r\n            style={{ \r\n              maxWidth: '200px', \r\n              maxHeight: '200px', \r\n              objectFit: 'contain' \r\n            }} \r\n          />\r\n          <a \r\n            href={fileUrl} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            style={{ display: 'block', fontSize: '0.8em' }}\r\n          >\r\n            Download {message.originalFileName || 'File'} ({formatFileSize(message.fileSize)})\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    // PDF preview\r\n    if (fileExtension === 'pdf') {\r\n      return (\r\n        <div>\r\n          <embed \r\n            src={fileUrl} \r\n            type=\"application/pdf\" \r\n            width=\"200\" \r\n            height=\"200\"\r\n          />\r\n          <a \r\n            href={fileUrl} \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n            style={{ display: 'block', fontSize: '0.8em' }}\r\n          >\r\n            Download PDF {message.originalFileName || 'File'} ({formatFileSize(message.fileSize)})\r\n          </a>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    // Generic file download for other types\r\n    return (\r\n      <a \r\n        href={fileUrl} \r\n        target=\"_blank\" \r\n        rel=\"noopener noreferrer\"\r\n        style={{ \r\n          display: 'block', \r\n          color: 'blue', \r\n          marginTop: '5px' \r\n        }}\r\n      >\r\n        Download {message.originalFileName || 'File'} ({formatFileSize(message.fileSize)})\r\n      </a>\r\n    );\r\n  };\r\n\r\n  // Helper function to format file size\r\n  const formatFileSize = (bytes) => {\r\n    if (!bytes) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ maxHeight: \"90vh\", overflowY: \"scroll\" }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} style={{\r\n            display: \"flex\",\r\n            justifyContent: msg.senderId === userId ? \"flex-end\" : \"flex-start\",\r\n            margin: \"10px 0\",\r\n          }}>\r\n            {/* <strong>{console.log('msg.senderId:', msg.senderId, 'userId:', userId)}{msg.senderId === userId ? \"You\" : \"Other\"}:</strong>{\" \"}\r\n            {msg.content && <span>{msg.content}</span>}\r\n            {renderFilePreview(msg)} */}\r\n            <div\r\n              style={{\r\n                backgroundColor: msg.senderId === userId ? \"#DCF8C6\" : \"#FFFFFF\",\r\n                padding: \"10px\",\r\n                borderRadius: \"10px\",\r\n                maxWidth: \"60%\",\r\n              }}\r\n            >\r\n              {/* <strong>{msg.senderId === userId ? \"You\" : \"Other\"}:</strong>{\" \"} */}\r\n              {msg.content && <span>{msg.content}</span>}\r\n              {renderFilePreview(msg)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{\r\n        display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-around\"\r\n      }}>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n          style={{\r\n            width: \"300px\", height: \"30px\", borderStyle: \"solid\", borderRadius: \"25px\"\r\n          }}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setFile(e.target.files[0])}\r\n          style={{ marginLeft: \"10px\" }}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messaging;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}