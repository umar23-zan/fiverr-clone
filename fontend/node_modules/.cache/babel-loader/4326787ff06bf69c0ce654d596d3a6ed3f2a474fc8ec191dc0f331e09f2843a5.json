{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umarm\\\\OneDrive\\\\Desktop\\\\fiverr-clone\\\\fontend\\\\src\\\\components\\\\ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Messaging from \"./Messaging\";\nimport { io } from \"socket.io-client\";\n// import './chatapp.css'\nimport account from '../images/account-icon.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction ChatApp() {\n  _s();\n  const [users, setUsers] = useState([]); // To store the list of users\n  const [selectedUser, setSelectedUser] = useState(null); // To store the selected user\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [userId, setUserId] = useState(\"\");\n\n  // Fetch logged-in user's ID and list of all users\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"userId\");\n    if (loggedInUser) {\n      setUserId(loggedInUser);\n\n      // Fetch all users\n      axios.get(\"http://localhost:5000/api/users\").then(res => {\n        setUsers(res.data);\n      }).catch(err => console.error(\"Error fetching users:\", err));\n\n      // Fetch conversations for the logged-in user\n      axios.get(`http://localhost:5000/api/conversations/${loggedInUser}`).then(res => setConversations(res.data)).catch(err => console.error(\"Error fetching conversations:\", err));\n    }\n  }, []);\n\n  // Handle user selection to start a conversation\n  const handleUserSelect = receiverId => {\n    var _users$find;\n    console.log(`Making GET request to: http://localhost:5000/api/conversations/${userId}/${receiverId}`);\n    const userName = ((_users$find = users.find(user => user._id === receiverId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || \"Unknown User\";\n    setSelectedUser(userName); // Set the selected user's name\n    console.log(userName);\n    axios.get(`http://localhost:5000/api/conversations/${userId}/${receiverId}`).then(res => {\n      if (res.data) {\n        setSelectedConversation(res.data);\n        socket.emit(\"joinConversation\", res.data._id);\n      }\n    }).catch(err => {\n      console.error(\"Error checking conversation:\", err.response ? err.response.data : err.message);\n\n      // Create new conversation if not found\n      axios.post('http://localhost:5000/api/conversations', {\n        participants: [userId, receiverId],\n        messages: []\n      }).then(newConversation => {\n        console.log(\"New conversation created:\", newConversation.data);\n        setSelectedConversation(newConversation.data);\n        socket.emit(\"joinConversation\", newConversation.data._id);\n      }).catch(err => {\n        console.error(\"Error creating new conversation:\", err);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        borderRight: \"1px solid #ddd\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"10px\"\n        },\n        children: users.filter(user => user._id !== userId) // Exclude the logged-in user\n        .map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleUserSelect(user._id) // Start a conversation with selected user\n          ,\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            padding: \"10px\",\n            border: \"1px solid #ddd\",\n            borderRadius: \"8px\",\n            cursor: \"pointer\",\n            backgroundColor: \"#f9f9f9\",\n            transition: \"background-color 0.3s ease\"\n          },\n          onMouseEnter: e => e.currentTarget.style.backgroundColor = \"#eaeaea\",\n          onMouseLeave: e => e.currentTarget.style.backgroundColor = \"#f9f9f9\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: account,\n            alt: `${user.name}'s profile`,\n            style: {\n              width: \"40px\",\n              height: \"40px\",\n              borderRadius: \"50%\",\n              marginRight: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 3,\n        padding: \"10px\",\n        height: \"90vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          fontWeight: \"bold\",\n          fontSize: \"20px\",\n          borderBottom: \"1px solid\",\n          height: \"70px\"\n        },\n        children: selectedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), selectedConversation ? /*#__PURE__*/_jsxDEV(Messaging, {\n        conversationId: selectedConversation._id,\n        receiverId: selectedConversation.participants.find(id => id !== userId),\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a user to start a conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"3CU0f5NQulHx/1eRgulbE3gbKro=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Messaging","io","account","jsxDEV","_jsxDEV","socket","ChatApp","_s","users","setUsers","selectedUser","setSelectedUser","conversations","setConversations","selectedConversation","setSelectedConversation","userId","setUserId","loggedInUser","localStorage","getItem","get","then","res","data","catch","err","console","error","handleUserSelect","receiverId","_users$find","log","userName","find","user","_id","name","emit","response","message","post","participants","messages","newConversation","style","display","children","flex","borderRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","gap","filter","map","onClick","alignItems","border","borderRadius","cursor","backgroundColor","transition","onMouseEnter","e","currentTarget","onMouseLeave","src","alt","width","height","marginRight","justifyContent","fontWeight","fontSize","borderBottom","conversationId","id","_c","$RefreshReg$"],"sources":["C:/Users/umarm/OneDrive/Desktop/fiverr-clone/fontend/src/components/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Messaging from \"./Messaging\";\r\nimport { io } from \"socket.io-client\";\r\n// import './chatapp.css'\r\nimport account from '../images/account-icon.svg'\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction ChatApp() {\r\n  const [users, setUsers] = useState([]); // To store the list of users\r\n  const [selectedUser, setSelectedUser] = useState(null); // To store the selected user\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  // Fetch logged-in user's ID and list of all users\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"userId\");\r\n    if (loggedInUser) {\r\n      setUserId(loggedInUser);\r\n\r\n      // Fetch all users\r\n      axios\r\n        .get(\"http://localhost:5000/api/users\")\r\n        .then((res) => {setUsers(res.data)\r\n        }\r\n        )\r\n        \r\n        .catch((err) => console.error(\"Error fetching users:\", err));\r\n\r\n      // Fetch conversations for the logged-in user\r\n      axios\r\n        .get(`http://localhost:5000/api/conversations/${loggedInUser}`)\r\n        .then((res) => setConversations(res.data))\r\n        .catch((err) => console.error(\"Error fetching conversations:\", err));\r\n    }\r\n  }, []);\r\n\r\n  // Handle user selection to start a conversation\r\n  const handleUserSelect = (receiverId) => {\r\n    console.log(`Making GET request to: http://localhost:5000/api/conversations/${userId}/${receiverId}`);\r\n    const userName = users.find((user) => user._id === receiverId)?.name || \"Unknown User\";\r\n    setSelectedUser(userName); // Set the selected user's name\r\n    console.log(userName)\r\n  \r\n    axios\r\n      .get(`http://localhost:5000/api/conversations/${userId}/${receiverId}`)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          setSelectedConversation(res.data);\r\n          socket.emit(\"joinConversation\", res.data._id);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error checking conversation:\", err.response ? err.response.data : err.message);\r\n        \r\n        // Create new conversation if not found\r\n        axios.post('http://localhost:5000/api/conversations', {\r\n          participants: [userId, receiverId],\r\n          messages: []\r\n        })\r\n        .then((newConversation) => {\r\n          console.log(\"New conversation created:\", newConversation.data);\r\n          setSelectedConversation(newConversation.data);\r\n          socket.emit(\"joinConversation\", newConversation.data._id);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error creating new conversation:\", err);\r\n        });\r\n      });\r\n  };\r\n  \r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {/* User List */}\r\n      <div style={{ flex: 1, borderRight: \"1px solid #ddd\", padding: \"10px\" }}>\r\n        <h3>Contacts</h3>\r\n        {/* <ul>\r\n          {users\r\n            .filter((user) => user._id !== userId) // Exclude the logged-in user\r\n            .map((user) => (\r\n              <li\r\n                key={user._id}\r\n                onClick={() => handleUserSelect(user._id)} // Start a conversation with selected user\r\n                style={{ cursor: \"pointer\", padding: \"5px\" }}\r\n              >\r\n                {user.name}\r\n              </li>\r\n            ))}\r\n        </ul> */}\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\" }}>\r\n            {users\r\n              .filter((user) => user._id !== userId) // Exclude the logged-in user\r\n              .map((user) => (\r\n                <div\r\n                  key={user._id}\r\n                  onClick={() => handleUserSelect(user._id)} // Start a conversation with selected user\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"10px\",\r\n                    border: \"1px solid #ddd\",\r\n                    borderRadius: \"8px\",\r\n                    cursor: \"pointer\",\r\n                    backgroundColor: \"#f9f9f9\",\r\n                    transition: \"background-color 0.3s ease\",\r\n                  }}\r\n                  onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#eaeaea\")}\r\n                  onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"#f9f9f9\")}\r\n                >\r\n                  <img\r\n                    src={account} \r\n                    alt={`${user.name}'s profile`}\r\n                    style={{\r\n                      width: \"40px\",\r\n                      height: \"40px\",\r\n                      borderRadius: \"50%\",\r\n                      marginRight: \"10px\",\r\n                    }}\r\n                  />\r\n                  <p>{user.name}</p>\r\n                </div>\r\n              ))}\r\n          </div>\r\n      </div>\r\n\r\n      {/* Messaging Area */}\r\n      <div style={{ flex: 3, padding: \"10px\", height: \"90vh\" }}>\r\n        <div style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"flex-start\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"20px\",\r\n          borderBottom: \"1px solid\",\r\n          height: \"70px\"\r\n        }}\r\n        >{selectedUser}</div>\r\n        {selectedConversation ? (\r\n          <Messaging\r\n            conversationId={selectedConversation._id}\r\n            receiverId={selectedConversation.participants.find(\r\n              (id) => id !== userId\r\n            )}\r\n            socket={socket}\r\n          />\r\n        ) : (\r\n          <p>Select a user to start a conversation</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}