{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umarm\\\\OneDrive\\\\Desktop\\\\fiverr-clone\\\\fontend\\\\src\\\\components\\\\ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Messaging from \"./Messaging\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatApp() {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [userId, setUserId] = useState(\"\");\n  useEffect(() => {\n    // Fetch logged-in user's ID (e.g., from localStorage or context)\n    const loggedInUser = localStorage.getItem(\"userId\");\n    if (loggedInUser) {\n      setUserId(loggedInUser);\n\n      // Fetch conversations for the logged-in user\n      axios.get(`http://localhost:5000/api/conversations/${loggedInUser}`).then(res => setConversations(res.data)).catch(err => console.error(err));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        borderRight: \"1px solid #ddd\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedConversation(conv),\n          style: {\n            cursor: \"pointer\",\n            padding: \"5px\",\n            background: (selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation._id) === conv._id ? \"#f0f0f0\" : \"\"\n          },\n          children: [\"Conversation with\", \" \", conv.participants.filter(id => id !== userId).join(\", \"), \" \"]\n        }, conv._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 2,\n        padding: \"10px\"\n      },\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(Messaging, {\n        conversationId: selectedConversation._id,\n        receiverId: selectedConversation.participants.find(id => id !== userId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a conversation to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatApp, \"T6xKlCuZJwrqGed+s3if2IukPWA=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Messaging","jsxDEV","_jsxDEV","ChatApp","_s","conversations","setConversations","selectedConversation","setSelectedConversation","userId","setUserId","loggedInUser","localStorage","getItem","get","then","res","data","catch","err","console","error","style","display","children","flex","borderRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","map","conv","onClick","cursor","background","_id","participants","filter","id","join","conversationId","receiverId","find","_c","$RefreshReg$"],"sources":["C:/Users/umarm/OneDrive/Desktop/fiverr-clone/fontend/src/components/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Messaging from \"./Messaging\";\r\n\r\nfunction ChatApp() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch logged-in user's ID (e.g., from localStorage or context)\r\n    const loggedInUser = localStorage.getItem(\"userId\");\r\n    if (loggedInUser) {\r\n      setUserId(loggedInUser);\r\n\r\n      // Fetch conversations for the logged-in user\r\n      axios\r\n        .get(`http://localhost:5000/api/conversations/${loggedInUser}`)\r\n        .then((res) => setConversations(res.data))\r\n        .catch((err) => console.error(err));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      {/* Conversation List */}\r\n      <div style={{ flex: 1, borderRight: \"1px solid #ddd\", padding: \"10px\" }}>\r\n        <h3>Conversations</h3>\r\n        <ul>\r\n          {conversations.map((conv) => (\r\n            <li\r\n              key={conv._id}\r\n              onClick={() => setSelectedConversation(conv)}\r\n              style={{\r\n                cursor: \"pointer\",\r\n                padding: \"5px\",\r\n                background:\r\n                  selectedConversation?._id === conv._id ? \"#f0f0f0\" : \"\",\r\n              }}\r\n            >\r\n              Conversation with{\" \"}\r\n              {conv.participants\r\n                .filter((id) => id !== userId)\r\n                .join(\", \")}{\" \"}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Messaging Area */}\r\n      <div style={{ flex: 2, padding: \"10px\" }}>\r\n        {selectedConversation ? (\r\n          <Messaging\r\n            conversationId={selectedConversation._id}\r\n            receiverId={selectedConversation.participants.find(\r\n              (id) => id !== userId\r\n            )}\r\n          />\r\n        ) : (\r\n          <p>Select a conversation to start chatting</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}