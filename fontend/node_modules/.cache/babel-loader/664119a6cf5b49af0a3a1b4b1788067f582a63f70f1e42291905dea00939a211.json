{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umarm\\\\OneDrive\\\\Desktop\\\\fiverr-clone\\\\fontend\\\\src\\\\components\\\\Messaging.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Messaging({\n  socket,\n  conversationId,\n  receiverId,\n  userId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    // Fetch existing messages for the conversation\n    axios.get(`http://localhost:5000/api/messages/${conversationId}`).then(res => {\n      setMessages(res.data); // Load previous messages\n    }).catch(err => console.error(\"Error fetching messages:\", err));\n\n    // Listen for new messages\n    socket.on(\"receiveMessage\", message => {\n      if (message.conversationId === conversationId) {\n        setMessages(prevMessages => [...prevMessages, message]);\n      }\n    });\n    return () => {\n      socket.off(\"receiveMessage\");\n    };\n  }, [conversationId, socket]);\n  const sendMessage = () => {\n    if (!newMessage.trim() && !file) return;\n    const message = {\n      conversationId,\n      senderId: userId,\n      receiverId,\n      content: newMessage,\n      fileUrl: null,\n      timestamp: new Date()\n    };\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"conversationId\", conversationId);\n      formData.append(\"senderId\", userId);\n      formData.append(\"receiverId\", receiverId);\n      axios.post(\"http://localhost:5000/api/messages/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        message.fileUrl = res.data.fileUrl; // Set file URL from server response\n        sendSocketMessage(message);\n      }).catch(err => console.error(\"Error uploading file:\", err));\n    } else {\n      sendSocketMessage(message);\n    }\n  };\n  const sendSocketMessage = message => {\n    // Emit the message through Socket.IO\n    socket.emit(\"sendMessage\", message);\n\n    // Save the message to the database\n    axios.post(\"http://localhost:5000/api/messages\", message).then(() => {\n      setMessages(prevMessages => [...prevMessages, message]);\n      setNewMessage(\"\"); // Clear input field\n      setFile(null); // Clear file input\n    }).catch(err => console.error(\"Error sending message:\", err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"300px\",\n        overflowY: \"scroll\"\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.senderId === userId ? \"You\" : \"Other\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), \" \", msg.content && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), msg.fileUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: msg.fileUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          style: {\n            display: \"block\",\n            color: \"blue\",\n            marginTop: \"5px\"\n          },\n          children: \"Download File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        style: {\n          marginLeft: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Messaging, \"I5MhRKMpwGbHWIbRkKV12Tn6fT0=\");\n_c = Messaging;\nexport default Messaging;\nvar _c;\n$RefreshReg$(_c, \"Messaging\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Messaging","socket","conversationId","receiverId","userId","_s","messages","setMessages","newMessage","setNewMessage","file","setFile","get","then","res","data","catch","err","console","error","on","message","prevMessages","off","sendMessage","trim","senderId","content","fileUrl","timestamp","Date","formData","FormData","append","post","headers","sendSocketMessage","emit","children","style","maxHeight","overflowY","map","msg","idx","margin","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","display","color","marginTop","type","value","onChange","e","placeholder","files","marginLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/umarm/OneDrive/Desktop/fiverr-clone/fontend/src/components/Messaging.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Messaging({ socket, conversationId, receiverId, userId }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch existing messages for the conversation\r\n    axios\r\n      .get(`http://localhost:5000/api/messages/${conversationId}`)\r\n      .then((res) => {\r\n        setMessages(res.data); // Load previous messages\r\n      })\r\n      .catch((err) => console.error(\"Error fetching messages:\", err));\r\n\r\n    // Listen for new messages\r\n    socket.on(\"receiveMessage\", (message) => {\r\n      if (message.conversationId === conversationId) {\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receiveMessage\");\r\n    };\r\n  }, [conversationId, socket]);\r\n\r\n  const sendMessage = () => {\r\n    if (!newMessage.trim() && !file) return;\r\n\r\n    const message = {\r\n      conversationId,\r\n      senderId: userId,\r\n      receiverId,\r\n      content: newMessage,\r\n      fileUrl: null,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"conversationId\", conversationId);\r\n      formData.append(\"senderId\", userId);\r\n      formData.append(\"receiverId\", receiverId);\r\n\r\n      axios\r\n        .post(\"http://localhost:5000/api/messages/upload\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        })\r\n        .then((res) => {\r\n          message.fileUrl = res.data.fileUrl; // Set file URL from server response\r\n          sendSocketMessage(message);\r\n        })\r\n        .catch((err) => console.error(\"Error uploading file:\", err));\r\n    } else {\r\n      sendSocketMessage(message);\r\n    }\r\n  };\r\n\r\n  const sendSocketMessage = (message) => {\r\n    // Emit the message through Socket.IO\r\n    socket.emit(\"sendMessage\", message);\r\n\r\n    // Save the message to the database\r\n    axios\r\n      .post(\"http://localhost:5000/api/messages\", message)\r\n      .then(() => {\r\n        setMessages((prevMessages) => [...prevMessages, message]);\r\n        setNewMessage(\"\"); // Clear input field\r\n        setFile(null); // Clear file input\r\n      })\r\n      .catch((err) => console.error(\"Error sending message:\", err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ maxHeight: \"300px\", overflowY: \"scroll\" }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} style={{ margin: \"10px 0\" }}>\r\n            <strong>{msg.senderId === userId ? \"You\" : \"Other\"}:</strong>{\" \"}\r\n            {msg.content && <span>{msg.content}</span>}\r\n            {msg.fileUrl && (\r\n              <a\r\n                href={msg.fileUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                style={{ display: \"block\", color: \"blue\", marginTop: \"5px\" }}\r\n              >\r\n                Download File\r\n              </a>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newMessage}\r\n          onChange={(e) => setNewMessage(e.target.value)}\r\n          placeholder=\"Type your message...\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          onChange={(e) => setFile(e.target.files[0])}\r\n          style={{ marginLeft: \"10px\" }}\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messaging;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFe,GAAG,CAAC,sCAAsCV,cAAc,EAAE,CAAC,CAC3DW,IAAI,CAAEC,GAAG,IAAK;MACbP,WAAW,CAACO,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC,CAAC;;IAEjE;IACAhB,MAAM,CAACmB,EAAE,CAAC,gBAAgB,EAAGC,OAAO,IAAK;MACvC,IAAIA,OAAO,CAACnB,cAAc,KAAKA,cAAc,EAAE;QAC7CK,WAAW,CAAEe,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;MAC3D;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXpB,MAAM,CAACsB,GAAG,CAAC,gBAAgB,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAACrB,cAAc,EAAED,MAAM,CAAC,CAAC;EAE5B,MAAMuB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAAChB,UAAU,CAACiB,IAAI,CAAC,CAAC,IAAI,CAACf,IAAI,EAAE;IAEjC,MAAMW,OAAO,GAAG;MACdnB,cAAc;MACdwB,QAAQ,EAAEtB,MAAM;MAChBD,UAAU;MACVwB,OAAO,EAAEnB,UAAU;MACnBoB,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,IAAIC,IAAI,CAAC;IACtB,CAAC;IAED,IAAIpB,IAAI,EAAE;MACR,MAAMqB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEvB,IAAI,CAAC;MAC7BqB,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAE/B,cAAc,CAAC;MACjD6B,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE7B,MAAM,CAAC;MACnC2B,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE9B,UAAU,CAAC;MAEzCN,KAAK,CACFqC,IAAI,CAAC,2CAA2C,EAAEH,QAAQ,EAAE;QAC3DI,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC,CACDtB,IAAI,CAAEC,GAAG,IAAK;QACbO,OAAO,CAACO,OAAO,GAAGd,GAAG,CAACC,IAAI,CAACa,OAAO,CAAC,CAAC;QACpCQ,iBAAiB,CAACf,OAAO,CAAC;MAC5B,CAAC,CAAC,CACDL,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC,CAAC;IAChE,CAAC,MAAM;MACLmB,iBAAiB,CAACf,OAAO,CAAC;IAC5B;EACF,CAAC;EAED,MAAMe,iBAAiB,GAAIf,OAAO,IAAK;IACrC;IACApB,MAAM,CAACoC,IAAI,CAAC,aAAa,EAAEhB,OAAO,CAAC;;IAEnC;IACAxB,KAAK,CACFqC,IAAI,CAAC,oCAAoC,EAAEb,OAAO,CAAC,CACnDR,IAAI,CAAC,MAAM;MACVN,WAAW,CAAEe,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;MACzDZ,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;MACnBE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EACjE,CAAC;EAED,oBACElB,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAKwC,KAAK,EAAE;QAAEC,SAAS,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAH,QAAA,EACrDhC,QAAQ,CAACoC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrB7C,OAAA;QAAewC,KAAK,EAAE;UAAEM,MAAM,EAAE;QAAS,CAAE;QAAAP,QAAA,gBACzCvC,OAAA;UAAAuC,QAAA,GAASK,GAAG,CAACjB,QAAQ,KAAKtB,MAAM,GAAG,KAAK,GAAG,OAAO,EAAC,GAAC;QAAA;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,EAChEN,GAAG,CAAChB,OAAO,iBAAI5B,OAAA;UAAAuC,QAAA,EAAOK,GAAG,CAAChB;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACzCN,GAAG,CAACf,OAAO,iBACV7B,OAAA;UACEmD,IAAI,EAAEP,GAAG,CAACf,OAAQ;UAClBuB,MAAM,EAAC,QAAQ;UACfC,GAAG,EAAC,qBAAqB;UACzBb,KAAK,EAAE;YAAEc,OAAO,EAAE,OAAO;YAAEC,KAAK,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAM,CAAE;UAAAjB,QAAA,EAC9D;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ;MAAA,GAZOL,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlD,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QACEyD,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjD,UAAW;QAClBkD,QAAQ,EAAGC,CAAC,IAAKlD,aAAa,CAACkD,CAAC,CAACR,MAAM,CAACM,KAAK,CAAE;QAC/CG,WAAW,EAAC;MAAsB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFlD,OAAA;QACEyD,IAAI,EAAC,MAAM;QACXE,QAAQ,EAAGC,CAAC,IAAKhD,OAAO,CAACgD,CAAC,CAACR,MAAM,CAACU,KAAK,CAAC,CAAC,CAAC,CAAE;QAC5CtB,KAAK,EAAE;UAAEuB,UAAU,EAAE;QAAO;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFlD,OAAA;QAAQgE,OAAO,EAAEvC,WAAY;QAAAc,QAAA,EAAC;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5C,EAAA,CA9GQL,SAAS;AAAAgE,EAAA,GAAThE,SAAS;AAgHlB,eAAeA,SAAS;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}