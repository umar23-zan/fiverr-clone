{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umarm\\\\OneDrive\\\\Desktop\\\\fiverr-clone\\\\fontend\\\\src\\\\components\\\\Gigs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getAllGigs, createGig } from '../api/gigApi';\nimport GigCard from './GigCard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gigs = () => {\n  _s();\n  const [gigs, setGigs] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const userid = localStorage.getItem('userId');\n  const [imageFile, setImageFile] = useState(null);\n  const [newGig, setNewGig] = useState({\n    freelancerId: userid,\n    title: '',\n    description: '',\n    price: 0,\n    deliveryTime: 0,\n    category: '',\n    images: []\n  });\n  useEffect(() => {\n    fetchGigs();\n  }, []);\n\n  // const fetchGigs = async () => {\n  //   const gigs = await getAllGigs();\n  //   setGigs(gigs);\n  // };\n  const fetchUserGigs = async () => {\n    const userId = userid; // Replace 'USER_ID' with the logged-in user's ID\n    const gigs = await getUserGigs(userId);\n    setGigs(gigs);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewGig({\n      ...newGig,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setImageFile(e.target.files[0]);\n  };\n  const uploadImage = async () => {\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    try {\n      const response = await axios.post('/api/gigs/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data.filePath; // Returns the uploaded image path\n    } catch (error) {\n      console.error('Image upload failed', error);\n      return null;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let uploadedImagePath = '';\n    if (imageFile) {\n      uploadedImagePath = await uploadImage();\n    }\n    const gigData = {\n      ...newGig,\n      images: uploadedImagePath ? [uploadedImagePath] : []\n    };\n    await createGig(gigData);\n    fetchUserGigs();\n    setShowForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gigs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(!showForm),\n      children: showForm ? 'Cancel' : 'Create Gig'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        placeholder: \"Price\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"deliveryTime\",\n        placeholder: \"Delivery Time (in days)\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"Category\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Gig\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gig-container\",\n      children: gigs.map(gig => /*#__PURE__*/_jsxDEV(GigCard, {\n        gig: gig\n      }, gig._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Gigs, \"UCxiYaWBf5vb5kXW6tgAchEYaHs=\");\n_c = Gigs;\nexport default Gigs;\nvar _c;\n$RefreshReg$(_c, \"Gigs\");","map":{"version":3,"names":["React","useState","useEffect","getAllGigs","createGig","GigCard","axios","jsxDEV","_jsxDEV","Gigs","_s","gigs","setGigs","showForm","setShowForm","userid","localStorage","getItem","imageFile","setImageFile","newGig","setNewGig","freelancerId","title","description","price","deliveryTime","category","images","fetchGigs","fetchUserGigs","userId","getUserGigs","handleInputChange","e","name","value","target","handleFileChange","files","uploadImage","formData","FormData","append","response","post","headers","data","filePath","error","console","handleSubmit","preventDefault","uploadedImagePath","gigData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","accept","className","map","gig","_id","_c","$RefreshReg$"],"sources":["C:/Users/umarm/OneDrive/Desktop/fiverr-clone/fontend/src/components/Gigs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllGigs, createGig } from '../api/gigApi';\r\nimport GigCard from './GigCard';\r\nimport axios from 'axios';\r\n\r\nconst Gigs = () => {\r\n  const [gigs, setGigs] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const userid = localStorage.getItem('userId');\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  const [newGig, setNewGig] = useState({\r\n    freelancerId: userid, \r\n    title: '',\r\n    description: '',\r\n    price: 0,\r\n    deliveryTime: 0,\r\n    category: '',\r\n    images: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchGigs();\r\n  }, []);\r\n\r\n  // const fetchGigs = async () => {\r\n  //   const gigs = await getAllGigs();\r\n  //   setGigs(gigs);\r\n  // };\r\n  const fetchUserGigs = async () => {\r\n    const userId = userid; // Replace 'USER_ID' with the logged-in user's ID\r\n    const gigs = await getUserGigs(userId);\r\n    setGigs(gigs);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewGig({ ...newGig, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setImageFile(e.target.files[0]);\r\n  };\r\n\r\n  const uploadImage = async () => {\r\n    const formData = new FormData();\r\n    formData.append('image', imageFile);\r\n\r\n    try {\r\n      const response = await axios.post('/api/gigs/upload', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      return response.data.filePath; // Returns the uploaded image path\r\n    } catch (error) {\r\n      console.error('Image upload failed', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let uploadedImagePath = '';\r\n    if (imageFile) {\r\n      uploadedImagePath = await uploadImage();\r\n    }\r\n\r\n    const gigData = {\r\n      ...newGig,\r\n      images: uploadedImagePath ? [uploadedImagePath] : [],\r\n    };\r\n\r\n    await createGig(gigData);\r\n    fetchUserGigs();\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Gigs</h1>\r\n      <button onClick={() => setShowForm(!showForm)}>\r\n        {showForm ? 'Cancel' : 'Create Gig'}\r\n      </button>\r\n      \r\n      {showForm && (\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" name=\"title\" placeholder=\"Title\" onChange={handleInputChange} />\r\n          <textarea name=\"description\" placeholder=\"Description\" onChange={handleInputChange}></textarea>\r\n          <input type=\"number\" name=\"price\" placeholder=\"Price\" onChange={handleInputChange} />\r\n          <input type=\"number\" name=\"deliveryTime\" placeholder=\"Delivery Time (in days)\" onChange={handleInputChange} />\r\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" onChange={handleInputChange} />\r\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n          <button type=\"submit\">Create Gig</button>\r\n        </form>\r\n      )}\r\n\r\n      <div className=\"gig-container\">\r\n        {gigs.map((gig) => (\r\n          <GigCard key={gig._id} gig={gig} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gigs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}