{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umarm\\\\OneDrive\\\\Desktop\\\\fiverr-clone\\\\fontend\\\\src\\\\components\\\\Messaging.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction Messaging() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const userId = \"user123\"; // Replace with the actual logged-in user ID\n  const receiverId = \"user456\"; // Replace with the receiver's user ID\n  const conversationId = \"12345\"; // Example conversation\n\n  // Join user's room on component mount\n  useEffect(() => {\n    socket.emit(\"joinRoom\", userId);\n    socket.on(\"receiveMessage\", message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => {\n      socket.off(\"receiveMessage\");\n    };\n  }, [userId]);\n\n  // Fetch existing messages for the conversation from the database\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/messages/${conversationId}`).then(response => response.json()).then(data => setMessages(data)).catch(error => console.error(\"Error fetching messages:\", error));\n  }, [conversationId]);\n  const handleSendMessage = () => {\n    const message = {\n      conversationId,\n      senderId: userId,\n      receiverId,\n      content: newMessage\n    };\n    socket.emit(\"sendMessage\", message); // Send message in real-time\n    setMessages([...messages, message]); // Optimistically update UI\n    setNewMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Messaging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.senderId === userId ? \"You: \" : \"Friend: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Messaging, \"eexxHKRaMxIvaNAmx/uwLhdZif4=\");\n_c = Messaging;\nexport default Messaging;\nvar _c;\n$RefreshReg$(_c, \"Messaging\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Messaging","_s","messages","setMessages","newMessage","setNewMessage","userId","receiverId","conversationId","emit","on","message","prev","off","fetch","then","response","json","data","catch","error","console","handleSendMessage","senderId","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/umarm/OneDrive/Desktop/fiverr-clone/fontend/src/components/Messaging.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction Messaging() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const userId = \"user123\"; // Replace with the actual logged-in user ID\r\n  const receiverId = \"user456\"; // Replace with the receiver's user ID\r\n  const conversationId = \"12345\"; // Example conversation\r\n\r\n  // Join user's room on component mount\r\n  useEffect(() => {\r\n    socket.emit(\"joinRoom\", userId);\r\n\r\n    socket.on(\"receiveMessage\", (message) => {\r\n      setMessages((prev) => [...prev, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"receiveMessage\");\r\n    };\r\n  }, [userId]);\r\n\r\n  // Fetch existing messages for the conversation from the database\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/api/messages/${conversationId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setMessages(data))\r\n      .catch((error) => console.error(\"Error fetching messages:\", error));\r\n  }, [conversationId]);\r\n\r\n  const handleSendMessage = () => {\r\n    const message = {\r\n      conversationId,\r\n      senderId: userId,\r\n      receiverId,\r\n      content: newMessage,\r\n    };\r\n\r\n    socket.emit(\"sendMessage\", message); // Send message in real-time\r\n    setMessages([...messages, message]); // Optimistically update UI\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Messaging</h3>\r\n      <ul>\r\n        {messages.map((msg, index) => (\r\n          <li key={index}>\r\n            <strong>{msg.senderId === userId ? \"You: \" : \"Friend: \"}</strong>\r\n            {msg.content}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <input\r\n        type=\"text\"\r\n        value={newMessage}\r\n        onChange={(e) => setNewMessage(e.target.value)}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <button onClick={handleSendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messaging;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}